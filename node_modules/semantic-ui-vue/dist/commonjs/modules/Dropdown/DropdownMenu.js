'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');

var _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);

var _lib = require('../../lib');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  name: 'SuiDropdownMenu',
  data: function data() {
    return { open: false };
  },
  mounted: function mounted() {
    var parent = this.$parent;
    while (parent && !this.accordion) {
      if (parent.$options.name === 'SuiDropdown') {
        this.dropdown = parent;
      }

      parent = parent.$parent;
    }

    if (!this.dropdown) {
      throw new Error('SuiDropdownMenu must be place as a child of a SuiDropdown');
    }

    this.dropdown.register(this);
  },

  methods: {
    setOpen: function setOpen(open) {
      this.open = open;
    }
  },
  render: function render() {
    var h = arguments[0];

    var ElementType = (0, _lib.getElementType)(this);
    return h(
      ElementType,
      (0, _babelHelperVueJsxMergeProps2.default)([(0, _lib.getChildProps)(this), {
        'class': (0, _lib.classes)('menu', this.open && 'visible', 'transition')
      }]),
      [this.$slots.default]
    );
  },

  meta: {
    parent: 'SuiDropdown'
  }
};