'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');

var _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);

var _lib = require('../../lib');

var _PropTypes = require('../../lib/PropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  name: 'SuiGrid',
  description: 'A grid is used to harmonize negative space in a layout.',
  props: {
    celled: Boolean,
    centered: Boolean,
    columns: {
      type: Number,
      description: 'Represents column count per row in Grid.'
    },
    divided: (0, _PropTypes.Enum)(['vertically'], {
      type: Boolean
    }),
    doubling: Boolean,
    padded: {
      type: Boolean,
      description: 'A grid can preserve its vertical and horizontal gutters on first and last columns.'
    },
    relaxed: [Boolean, String],
    stackable: Boolean,
    verticalAlign: (0, _PropTypes.Enum)(['bottom', 'middle', 'top'])
  },
  render: function render() {
    var h = arguments[0];

    var ElementType = (0, _lib.getElementType)(this);
    return h(
      ElementType,
      (0, _babelHelperVueJsxMergeProps2.default)([(0, _lib.getChildProps)(this), {
        'class': (0, _lib.classes)('ui', (0, _lib.num)(this.columns), this.columns && 'column', this.stackable && 'stackable', this.doubling && 'doubling', this.padded && 'padded', this.verticalAlign, this.verticalAlign && 'aligned', this.centered && 'centered', this.divided, (this.divided || this.divided === '') && 'divided', this.celled && 'celled', this.relaxed !== true && this.relaxed, this.relaxed && 'relaxed', 'grid')
      }]),
      [this.$slots.default]
    );
  }
};